name: Quality Checks

on:
  pull_request:
    branches: ["*"]

env:
  NODE_VERSION: 18 # Default Node.js version

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: build / build (pull_request)
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          CI: true
          NODE_ENV: production
          # Using placeholders for build environment
          GITHUB_APP_CLIENT_ID: placeholder
          GITHUB_APP_CLIENT_SECRET: placeholder
          GITHUB_APP_PRIVATE_KEY: placeholder
          DATABASE_URL: placeholder
          CLERK_SECRET_KEY: placeholder
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: placeholder
          DEEPSEEK_API_KEY: placeholder
          TRIGGER_SECRET_KEY: placeholder

  lint:
    name: linting / lint (pull_request)
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint
        env:
          CI: true

  format:
    name: format checking / format check (pull_request)
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check formatting
        run: npm run format:check
        env:
          CI: true

  typecheck:
    name: type checking / type check (pull_request)
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npx tsc --noEmit
        env:
          CI: true

  test:
    name: server tests / server tests (pull_request)
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run server tests
        run: npm test -- --testPathPattern=services
        env:
          CI: true


