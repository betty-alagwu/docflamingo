generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Customer {
  id                String        @id @default(auto()) @map("_id") @db.ObjectId
  clerkUserId       String        @unique
  githubAccessToken String
  name              String?
  email             String?
  avatarUrl         String?
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  lastLoginAt       DateTime?
  installations     Installation[]
  jobs              Job[]
}

model Installation {
  id                   String    @id @default(auto()) @map("_id") @db.ObjectId
  githubInstallationId Int
  Customer             Customer? @relation(fields: [customerId], references: [id])
  customerId           String?   @db.ObjectId
}

model Job {
  id                     String    @id @default(auto()) @map("_id") @db.ObjectId
  customer               Customer  @relation(fields: [customerId], references: [id])
  customerId             String    @db.ObjectId
  githubRepositoryId     Int
  githubRepositoryName   String
  githubRepositoryOwner  String
  githubPullRequestId    Int
  githubPullRequestNumber Int
  githubPullRequestTitle String?
  status                 String    // "open", "closed", "merged"
  createdAt              DateTime  @default(now())
  updatedAt              DateTime  @updatedAt
  closedAt               DateTime?
  mergedAt               DateTime?
  headSha                String
  baseSha                String
  reviewedFiles          String[]
  triggerTaskIds         String[] 

  @@index([githubRepositoryId, githubPullRequestId])
  @@index([customerId, status])
  @@index([createdAt])
}

model Suggestion {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}
